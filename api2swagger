#!/usr/bin/env node
'use strict';

var program = require('commander');
var version = require('../lib/util/cli').version();
var executeApi = require('../lib/execute/api-custom.js');
var dataReader=require('../lib/util/postOutPutReader.js');
program
  .version(version);

program
  .usage('<options>')
  .option('-j, --json <json>', 'Json File from POST tool')
  .option('-e, --endpoint <endpoint>', 'Rest API Endpint')
  .option('-o, --output <file>', 'Swagger destination location filename')
  .option('-X, --httpMethod <httpMethod>', 'HTTP Method Name - Allowed HEAD, GET, POST, PUT, DELETE')
  .option('-d, --data <data>', 'POST / PUT Data')
  .option('-H, --header <header>', 'Request Headers', collect, [])
  .description('Generates Swagger 2.0 Spec from an API Call');

program.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('    $ swaggergen --help');
  console.log('    $ swaggergen -e http://example.com/returnSomething');
  console.log('');
});

program.parse(process.argv);

var options = {};
options.endpoint = program.endpoint;
options.httpMethod = program.httpMethod;
options.output = program.output;
options.data = program.data;
options.headers = program.header;
options.json= program.json;




var pocessibleEndpointsData=dataReader.readDataFromJsonFile(options.json);
for(var i=0;i<pocessibleEndpointsData.length;i++){
options.endPointDeatils=pocessibleEndpointsData[i];
executeApi.processRequest(options, function(err, reply) {
  if(err) {
    console.log(reply);
  }
  else {
    //nothing for now..
  }
});
}

function collect(val, headers) {
  headers.push(val);
  return headers;
}